#!/usr/bin/make -f
# Uncomment this to turn on verbose mode.
# export DH_VERBOSE = 1

%:
	dh $@ --skip-missing-doc --skip-systemd-service

# NOVO: Regra para limpar o projeto Cargo/Tauri. Antes, instala o cargo
override_dh_auto_clean:
	command -v "cargo" > /dev/null 2>&1 || ( \
		add-apt-repository -s "deb https://ppa.launchpadcontent.net/liushuyu-011/rust-updates-1.82/ubuntu/ noble main" -y && \
		apt install cargo-1.82 rustc-1.82 && \
		ln -s /usr/bin/cargo-1.82 /usr/bin/cargo && \
		ln -s /usr/bin/rustc-1.82 /usr/bin/rustc \
	)
	# Limpa o projeto Cargo/Tauri dentro de src-tauri
	command -v "cargo-1.82" > /dev/null 2>&1 && echo "Já existe o comando cargo-1.82" || echo "Não tem cargo-1.82"
	command -v "cargo" > /dev/null 2>&1 || (echo "Não existe o comando cargo ainda" && exit);
	(cd src-tauri && cargo clean)

override_dh_auto_build:
	add-apt-repository -s "deb https://ppa.launchpadcontent.net/liushuyu-011/rust-updates-1.82/ubuntu/ noble main" -y
	apt update
	apt install cargo-1.82 rustc-1.82
	rm /usr/bin/cargo && ln -s /usr/bin/cargo-1.82 /usr/bin/cargo
	rm /usr/bin/rustc && ln -s /usr/bin/rustc-1.82 /usr/bin/rustc
	(cd src-tauri && tar -zxvf ../debian/vendor.tar.gz)
	tar -zxvf debian/node_modules.tar.gz
	rm debian/vendor.tar.gz debian/node_modules.tar.gz
	# Compila o aplicativo Tauri

override_dh_auto_install:
	# Caminho onde o Tauri coloca o executável e outros arquivos
	# Ajuste conforme o nome real do seu executável gerado pelo Tauri
	TAURI_BUILD_DIR=$(pwd)/src-tauri/target/x86_64-unknown-linux-gnu/release
	APP_EXECUTABLE_NAME=$(echo faire-todo-app | tr '[:upper:]' '[:lower:]')

	# Cria os diretórios de destino
	mkdir -p $(DESTDIR)/usr/bin
	mkdir -p $(DESTDIR)/usr/share/applications
	mkdir -p $(DESTDIR)/usr/share/icons/hicolor/scalable/apps
	mkdir -p $(DESTDIR)/usr/share/icons/hicolor/256x256/apps

	# Copia o executável principal
	cp "${TAURI_BUILD_DIR}/${APP_EXECUTABLE_NAME}" "$(DESTDIR)/usr/bin/${APP_EXECUTABLE_NAME}"
	chmod +x "$(DESTDIR)/usr/bin/${APP_EXECUTABLE_NAME}"

	# Copia o arquivo .desktop
	cp debian/fairetodoapp.desktop $(DESTDIR)/usr/share/applications/${APP_EXECUTABLE_NAME}.desktop

	# Copia ícones (verifique onde estão seus ícones no projeto - images/icon.svg, images/icon_256x256.png)
	# Verifique se o arquivo images/icon.svg existe no seu projeto.
	# Ou comente se você não tem esses ícones ou se o Tauri os empacota de outra forma.
	[ -f images/icon.svg ] && cp images/icon.svg $(DESTDIR)/usr/share/icons/hicolor/scalable/apps/${APP_EXECUTABLE_NAME}.svg
	[ -f images/icon_256x256.png ] && cp images/icon_256x256.png $(DESTDIR)/usr/share/icons/hicolor/256x256/apps/${APP_EXECUTABLE_NAME}.png

	# Limpar arquivos de build
	dh_clean
