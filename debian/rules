#!/usr/bin/make -f
# Uncomment this to turn on verbose mode.
# export DH_VERBOSE = 1

%:
	dh $@ --with cargo --buildsystem=cargo --skip-missing-doc --skip-systemd-service

# NOVO: Regra para limpar o projeto Cargo/Tauri
override_dh_auto_clean:
	# Limpa o projeto Cargo/Tauri dentro de src-tauri
	(cd src-tauri && cargo clean)
	# Limpa dependências e caches do Node.js
	npm cache clean --force || true
	# Limpeza padrão do debhelper
	#dh_auto_clean

override_dh_auto_build:
	# Limpa caches e instala dependências do Node.js
	npm cache clean --force || true
	npm install --silent --no-progress
	# Build do frontend Angular (se estiver em 'src')
	# Certifique-se que o output do build do Angular vá para a pasta 'dist' ou similar,
	# que o Tauri espera.
	# Exemplo: (pode variar dependendo dos seus scripts em package.json)
	# npm run build -- --output-path "$(CURDIR)/dist"

	# Compila o aplicativo Tauri
	cargo tauri build --release --target x86_64-unknown-linux-gnu

override_dh_auto_install:
	# Caminho onde o Tauri coloca o executável e outros arquivos
	# Ajuste conforme o nome real do seu executável gerado pelo Tauri
	TAURI_BUILD_DIR=$(CURDIR)/src-tauri/target/release
	APP_EXECUTABLE_NAME=$(echo fairetodoapp | tr '[:upper:]' '[:lower:]')

	# Cria os diretórios de destino
	mkdir -p $(DESTDIR)/usr/bin
	mkdir -p $(DESTDIR)/usr/share/applications
	mkdir -p $(DESTDIR)/usr/share/icons/hicolor/scalable/apps
	mkdir -p $(DESTDIR)/usr/share/icons/hicolor/256x256/apps

	# Copia o executável principal
	cp "${TAURI_BUILD_DIR}/${APP_EXECUTABLE_NAME}" "$(DESTDIR)/usr/bin/${APP_EXECUTABLE_NAME}"
	chmod +x "$(DESTDIR)/usr/bin/${APP_EXECUTABLE_NAME}"

	# Copia o arquivo .desktop
	cp debian/fairetodoapp.desktop $(DESTDIR)/usr/share/applications/

	# Copia ícones (verifique onde estão seus ícones no projeto - images/icon.svg, images/icon_256x256.png)
	# Verifique se o arquivo images/icon.svg existe no seu projeto.
	# Ou comente se você não tem esses ícones ou se o Tauri os empacota de outra forma.
	[ -f images/icon.svg ] && cp images/icon.svg $(DESTDIR)/usr/share/icons/hicolor/scalable/apps/fairetodoapp.svg
	[ -f images/icon_256x256.png ] && cp images/icon_256x256.png $(DESTDIR)/usr/share/icons/hicolor/256x256/apps/fairetodoapp.png

	# Limpar arquivos de build
	dh_clean
